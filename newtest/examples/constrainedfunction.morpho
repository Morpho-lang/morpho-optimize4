// Simple test problem with constraints

import optimize4

class ConstrainedFunctionExample {
  init() { 
  }

  buildAdapter() { 
    fn func(x, y, z) {
      return (x+2)^2 + 0.5*(y-2)^2 + 2*(z-2)^2
    }

    fn c(x, y, z) {
        return x + y - 1
    }

    fn d(x, y, z) {
        return 1 - (x^2 + y^2 + z^2)
    }

    self.adapter = FunctionAdapter(func, start=Matrix([0, 0, 0]), constraints=[c, d], equalitycount=1)
    return self.adapter
  }

  build() { // Setup the problem and return an Adapter
    return self.buildAdapter()
  }

  check() { 
    var soln = Matrix([0.21288038164309642, 0.7871196183569036, 0.5788995158999289])
    return (self.adapter.get() - soln).norm()
  }
}
