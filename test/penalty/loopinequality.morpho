// Test the MeshAdapter on a simple loop with inequality constraints

import meshtools 
import optimize4
import plot 

// Build mesh 
var m = LineMesh(fn (u) [cos(u), sin(u)], -Pi...Pi:Pi/12, closed=true) 

// Set up a demo problem 
var problem = OptimizationProblem(m)
problem.addenergy(Length())
problem.addconstraint(AreaEnclosed())

var L = 0.75
var lsupper = ScalarPotential(fn (x,y) L-y)
var lslower = ScalarPotential(fn (x,y) y+L)
problem.addlocalconstraint(lsupper, onesided=true)
problem.addlocalconstraint(lslower, onesided=true)

// Test the MeshAdapter 
var adapt = MeshAdapter(problem, m)

var control = PenaltyController(adapt)
control.optimize(20) 

Show(plotmesh(m, grade=[0,1]))
